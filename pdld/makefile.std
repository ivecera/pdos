# Produce Windows executables
# links with PDPCLIB created by makefile.std
# Or makefile.war if using the ARM versions of the tools

VPATH=src;src/bytearray;src/hashtab;src/ftebc


#CC=gccprm
#CFLAGS=-O0
#AS=asprm
#AR=arprm
#COPTS=-S $(CFLAGS) -Wall -fno-common -I./src -I./src/bytearray \
#    -I./src/hashtab -I../pdpclib -D__WIN32__ -D__USEBIVA__ \
#    -D__ARM__ -msoft-float -mapcs-32 -fno-leading-underscore \
#    -DNO_LONG_LONG -ansi -pedantic-errors
#EXTRA=../pdpclib/armsupa.obj ../pdpclib/fpfuncsa.obj


CC=gccwin
CFLAGS=-O2
####CFLAGS=-O2 -DNO_LONG_LONG -ansi -pedantic-errors
AS=pdas --oformat coff
AR=xar
COPTS=-S $(CFLAGS) -Wall -fno-common -I./src -I./src/bytearray -I./src/hashtab -I./src/ftebc -I../pdpclib -D__WIN32__ -D__NOBIVA__


LD=pdld
LDFLAGS=-s -nostdlib --no-insert-timestamp


OBJS=aout.obj aout_bytearray.obj atari.obj atari_bytearray.obj \
    bytearray.obj cms.obj coff.obj coff_bytearray.obj elf.obj \
    elf_bytearray.obj error.obj febc.obj hashtab.obj hunk.obj \
    ld.obj libld.obj link.obj lx.obj lx_bytearray.obj \
    mainframe.obj map.obj read.obj sections.obj symbols.obj \
    tebc.obj vse.obj xmalloc.obj int64sup.obj

TARGET=pdld.exe

all: clean $(TARGET)

$(TARGET): $(OBJS)
  $(AR) s temp.lib
  $(LD) $(LDFLAGS) -o $(TARGET) ../pdpclib/w32start.obj ld.obj $(EXTRA) temp.lib ../pdpclib/msvcrt.lib

.c.obj:
  $(CC) $(COPTS) -o $*.s $<
  $(AS) -o $@ $*.s
  $(AR) r temp.lib $@
  rm -f $*.s

clean:
  rm -f temp.lib
  rm -f *.obj $(TARGET)

BOOTSTRAP_AS=aswin
BOOTSTRAP_LD=ldwin

bootstrap: set_bootstrap all

set_bootstrap:
  $(eval AS=$(BOOTSTRAP_AS))
  $(eval LD=$(BOOTSTRAP_LD))
